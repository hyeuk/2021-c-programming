C애플리케이션 5주차

주소(address)
- 메모리 공간은 8비트인 1바이트마다 순차적인 고유한 번호
- 메모리 주소는 저장 장소인 변수이름과 함께 기억 장소를 참조하는 또 다른 방법

함수scanf_s()를 사용하면서 인자를 &변수이름 으로 사용
- 바로 &(ampersand)가 피연산자인 변수의 메모리 주소를 반환하는 주소연산자

포인터변수(간단히 포인터)
- 주소값을 저장하는 변수
o 변수의 주소값은 반드시 포인터 변수에 저장
o 일반 변수에는 일반 자료 값이 저장
- 일반 변수와 구별되며 선언방법이 다름

선언방법
- 포인터 변수 선언에서 자료형과 포인터 변수 이름 사이에 연산자 *를 삽입
- 다음의 ptrint,ptrshort,ptrchar,ptrdouble은 모두 포인터 변수
- 예로 int*ptrint 라고 선언
o int포인터 ptrint라고 읽음
- 변수 자료형이 다르면
o 그 변수의 주소를 저장하는 포인터의 자료형도 반드시 달라야함

여러 개의 포인터 변수를 한 번에 선언할 때
int*ptr1,*ptr2*ptr3;

포인터 변수에 지정할 특별한 초기값이 없는 경우
- int*ptr = NULL;
0번 주소값인 NULL로 초기값을 저장
NULL이 저장된 포인터 변수는 아무 변수도 가리키고 있지 않다는 의미

NULL
- 헤더파일 stdio.h에 정의되어 있는 포인터 상수로서 0번지의 주소값을 의미

이중 포인터
 - 이중 포인터 : 포인터 변수의 주소값을 갖는 변수
 - 삼중 포인터 : 다시 이중 포인터의 주소값을 갖는 변수

다중 포인터
 - 포인터의 포인터



int a = 10;
int *pa = &a;


pa = &a
*pa =a

*(pa ++)
(*pa)++
11 != pa+1

